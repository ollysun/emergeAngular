{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f3f2f6fb022a9cb1db8d","webpack:///./src/index.ts","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/common\"","webpack:///./src/ng2-auto-complete.ts","webpack:///external \"@angular/http\"","webpack:///external \"rxjs/Rx\"","webpack:///./src/ng2-auto-complete.component.ts","webpack:///external \"rxjs/Subject\"","webpack:///./src/ng2-auto-complete.directive.ts"],"names":[],"mappings":"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","file":"ng2-auto-complete.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"), require(\"@angular/http\"), require(\"rxjs/Rx\"), require(\"rxjs/Subject\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\", \"@angular/http\", \"rxjs/Rx\", \"rxjs/Subject\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-auto-complete\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"), require(\"@angular/http\"), require(\"rxjs/Rx\"), require(\"rxjs/Subject\"));\n\telse\n\t\troot[\"ng2-auto-complete\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"], root[\"@angular/http\"], root[\"rxjs/Rx\"], root[\"rxjs/Subject\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f3f2f6fb022a9cb1db8d\n **/","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Ng2AutoComplete } from \"./ng2-auto-complete\";\nimport { Ng2AutoCompleteComponent } from \"./ng2-auto-complete.component\";\nimport { Ng2AutoCompleteDirective } from \"./ng2-auto-complete.directive\";\n\nexport {\n  Ng2AutoComplete,\n  Ng2AutoCompleteComponent,\n  Ng2AutoCompleteDirective\n};\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [Ng2AutoCompleteComponent, Ng2AutoCompleteDirective],\n  exports:  [Ng2AutoCompleteComponent, Ng2AutoCompleteDirective],\n  entryComponents: [Ng2AutoCompleteComponent],\n  providers: [ Ng2AutoComplete ]\n})\nexport class Ng2AutoCompleteModule {}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/index.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/forms\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/common\"\n ** module id = 3\n ** module chunks = 0\n **/","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from \"@angular/http\";\nimport { Observable } from \"rxjs\";\nimport \"rxjs/Rx\";\n\n/**\n * provides auto-complete related utility functions\n */\n@Injectable()\nexport class Ng2AutoComplete {\n\n  public source: string;\n  public pathToData: string;\n\n  constructor(private http: Http) {\n    // ...\n  }\n\n  filter(list: any[], keyword: string) {\n    return list.filter(\n      el => {\n        return !!JSON.stringify(el).match(new RegExp(keyword, \"i\"));\n      }\n    );\n  }\n\n  /**\n   * return remote data from the given source and options, and data path\n   * \n   * @param {*} options is an object containing the query paramters for the GET call\n   * @returns {Observable<Response>}\n   * \n   * @memberOf AutoComplete\n   */\n  getRemoteData(options: any): Observable<Response> {\n\n    let keyValues: any[] = [];\n    let url = \"\";\n\n    for (var key in options) {\n      if (options.hasOwnProperty(key)) {\n        // replace all keyword to value\n        let regexp: RegExp = new RegExp(\":\" + key, \"g\");\n\n        url = this.source;\n        if (url.match(regexp)) {\n          url = url.replace(regexp, options[key]);\n        } else {\n          keyValues.push(key + \"=\" + options[key]);\n        }\n      }\n    }\n\n    if (keyValues.length) {\n      var qs = keyValues.join(\"&\");\n      url += url.match(/\\?[a-z]/i) ? qs : (\"?\" + qs);\n    }\n\n    return this.http.get(url)\n      .map(resp => resp.json())\n      .map(resp => {\n        var list = resp.data || resp;\n\n        if (this.pathToData) {\n          var paths = this.pathToData.split(\".\");\n          paths.forEach(prop => list = list[prop]);\n        }\n\n        return list;\n      });\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/ng2-auto-complete.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/http\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"rxjs/Rx\"\n ** module id = 6\n ** module chunks = 0\n **/","import { Component, ElementRef, Input, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { Subject } from \"rxjs/Subject\";\nimport { Ng2AutoComplete } from \"./ng2-auto-complete\";\n\n/**\n * show a selected date in monthly calendar\n * Each filteredList item has the following property in addition to data itself\n *   1. displayValue as string e.g. Allen Kim\n *   2. dataValue as any e.g. \n */\n@Component({\n  selector: \"ng2-auto-complete\",\n  template: `\n  <div class=\"ng2-auto-complete\">\n\n    <!-- keyword input -->\n    <input class=\"keyword\"\n           placeholder=\"{{placeholder}}\"\n           (focus)=\"showDropdownList()\"\n           (blur)=\"hideDropdownList()\"\n           (keydown)=\"inputElKeyHandler($event)\"\n           (input)=\"reloadListInDelay()\"\n           [(ngModel)]=\"keyword\" />\n\n    <!-- dropdown that user can select -->\n    <ul *ngIf=\"dropdownVisible\"\n        [style.bottom]=\"inputEl.style.height\"\n        [style.position]=\"closeToBottom ? 'absolute': ''\">\n      <li *ngIf=\"isLoading\" class=\"loading\">Loading</li>\n      <li *ngIf=\"blankOptionText\"\n          (mousedown)=\"selectOne('')\"\n          class=\"blank-item\">{{blankOptionText}}</li>\n      <li class=\"item\"\n          *ngFor=\"let item of filteredList; let i=index\"\n          (mousedown)=\"selectOne(item)\"\n          [ngClass]=\"{selected: i === itemIndex}\"\n          [innerHtml]=\"getFormattedList(item)\">\n      </li>\n    </ul>\n\n  </div>`,\n  providers: [Ng2AutoComplete],\n  styles: [`\n  @keyframes slideDown {\n    0% {\n      transform:  translateY(-10px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n  .ng2-auto-complete ng2-auto-complete {\n    background-color: transparent;\n  }\n  .ng2-auto-complete ng2-auto-complete input {\n    outline: none;\n    border: 0px;\n    padding: 2px; \n    box-sizing: border-box;\n    background-clip: content-box;\n  }\n\n  .ng2-auto-complete ng2-auto-complete ul {\n    background-color: #fff;\n    margin: 0;\n    width : 100%;\n    overflow-y: auto;\n    list-style-type: none;\n    padding: 0;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    animation: slideDown 0.1s;\n  }\n\n  .ng2-auto-complete ng2-auto-complete ul li {\n    padding: 2px 5px;\n    border-bottom: 1px solid #eee;\n  }\n\n  .ng2-auto-complete ng2-auto-complete ul li.selected {\n    background-color: #ccc;\n  }\n\n  .ng2-auto-complete ng2-auto-complete ul li:last-child {\n    border-bottom: none;\n  }\n\n  .ng2-auto-complete ng2-auto-complete ul li:hover {\n    background-color: #ccc;\n  }`\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class Ng2AutoCompleteComponent implements OnInit {\n\n  /**\n   * public input properties\n   */\n  @Input(\"list-formatter\") listFormatter: (arg: any) => string;\n  @Input(\"source\") source: any;\n  @Input(\"path-to-data\") pathToData: string;\n  @Input(\"min-chars\") minChars: number = 0;\n  @Input(\"value-property-name\") valuePropertyName: string = \"id\";\n  @Input(\"display-property-name\") displayPropertyName: string = \"value\";\n  @Input(\"placeholder\") placeholder: string;\n  @Input(\"blank-option-text\") blankOptionText: string;\n\n  el: HTMLElement;           // this component  element `<ng2-auto-complete>`\n  inputEl: HTMLInputElement; // `<input>` element in `<ng2-auto-complete>` for auto complete\n  userInputEl: Element;      // directive element that called this element `<input ng2-auto-complete>`\n  userInputElTabIndex: any;\n\n  closeToBottom: boolean = false;\n  dropdownVisible: boolean = false;\n  isLoading: boolean = false;\n\n  filteredList: any[] = [];\n  itemIndex: number = 0;\n  keyword: string;\n\n  valueSelected: Subject<any> = new Subject();\n\n  isSrcArr(): boolean {\n    return (this.source.constructor.name === \"Array\");\n  }\n\n  /**\n   * constructor\n   */\n  constructor(\n    elementRef: ElementRef,\n    public autoComplete: Ng2AutoComplete\n  ) {\n    this.el = elementRef.nativeElement;\n  }\n\n  /**\n   * user enters into input el, shows list to select, then select one\n   */\n  ngOnInit(): void {\n    this.inputEl = <HTMLInputElement>(this.el.querySelector(\"input\"));\n    this.userInputEl = this.el.parentElement.querySelector(\"input\");\n    this.autoComplete.source = this.source;\n    this.autoComplete.pathToData = this.pathToData;\n  }\n\n  reloadListInDelay(): void {\n    let delayMs = this.isSrcArr() ? 10 : 500;\n\n    // executing after user stopped typing\n    this.delay(() => this.reloadList(), delayMs);\n  }\n\n  showDropdownList(): void {\n    this.keyword = \"\";\n    this.inputEl.focus();\n\n    this.userInputElTabIndex = this.userInputEl['tabIndex'];\n    this.userInputEl['tabIndex'] = -100;  //disable tab focus for <shift-tab> pressed\n\n    this.reloadList();\n  }\n\n  hideDropdownList(): void {\n    this.dropdownVisible = false;\n    this.userInputEl['tabIndex'] = this.userInputElTabIndex; // enable tab focus\n  }\n\n  reloadList(): void {\n    let keyword = this.inputEl.value;\n\n    this.dropdownVisible = true;\n\n    if (this.isSrcArr()) {\n      // local source \n      this.filteredList = this.autoComplete.filter(this.source, this.keyword);\n    } else {\n\n      this.isLoading = true;\n\n      if (keyword.length >= this.minChars) {\n        if (typeof this.source === \"function\") {\n          // custom function that returns observable \n          this.source(keyword).subscribe(\n            resp => {\n\n              if (this.pathToData) {\n                var paths = this.pathToData.split(\".\");\n                paths.forEach(prop => resp = resp[prop]);\n              }\n\n              this.filteredList = resp;\n            },\n            error => null,\n            () => this.isLoading = false // complete\n          );\n        } else {\n          // remote source  \n          let query = { keyword: keyword };\n          this.autoComplete.getRemoteData(query)\n            .subscribe(\n            resp => {\n              this.filteredList = (<any>resp);\n            },\n            error => null,\n            () => this.isLoading = false // complete\n            );\n        }\n      }\n    }\n  }\n\n  selectOne(data: any) {\n    this.hideDropdownList();\n    this.valueSelected.next(data);\n  };\n\n  inputElKeyHandler(evt: any) {\n    let totalNumItem = this.filteredList.length;\n\n    switch (evt.keyCode) {\n      case 27: // ESC, hide auto complete\n        this.hideDropdownList();\n        break;\n\n      case 38: // UP, select the previous li el\n        this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\n        break;\n\n      case 40: // DOWN, select the next li el or the first one\n        this.dropdownVisible = true;\n        this.itemIndex = (totalNumItem + this.itemIndex + 1) % totalNumItem;\n        break;\n\n      case 13: // ENTER, choose it!!\n        if (this.filteredList.length > 0) {\n          this.selectOne(this.filteredList[this.itemIndex]);\n        }\n        evt.preventDefault();\n        break;\n    }\n  };\n\n  getFormattedList(data: any): string {\n    let formatter = this.listFormatter || this.defaultListFormatter;\n    return formatter.apply(this, [data]);\n  }\n\n  private defaultListFormatter(data: any): string {\n    let html: string = \"\";\n    html += data[this.valuePropertyName] ? `<b>(${data[this.valuePropertyName]})</b>` : \"\";\n    html += data[this.displayPropertyName] ? `<span>${data[this.displayPropertyName]}</span>` : data;\n    return html;\n  }\n\n  private delay = (function () {\n    var timer = 0;\n    return function (callback: any, ms: number) {\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/ng2-auto-complete.component.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"rxjs/Subject\"\n ** module id = 8\n ** module chunks = 0\n **/","import {\n  Directive,\n  Input,\n  Output,\n  ComponentRef,\n  ViewContainerRef,\n  EventEmitter,\n  OnInit,\n  ComponentFactoryResolver,\n  SimpleChanges\n} from \"@angular/core\";\nimport \"rxjs/Rx\";\n\nimport {Ng2AutoCompleteComponent} from \"./ng2-auto-complete.component\";\n\n/**\n * display auto-complete section with input and dropdown list when it is clicked\n */\n@Directive({\n  selector: \"[auto-complete], [ng2-auto-complete]\",\n  host: {\n    \"(click)\": \"showAutoCompleteDropdown()\",\n    \"(focus)\": \"showAutoCompleteDropdown()\"\n  }\n})\nexport class Ng2AutoCompleteDirective implements OnInit {\n\n  @Input(\"auto-complete-placeholder\") autoCompletePlaceholder: string;\n  @Input(\"list-formatter\") listFormatter: (arg: any) => string;\n  @Input(\"source\") source: any;\n  @Input(\"path-to-data\") pathToData: string;\n  @Input(\"min-chars\") minChars: number;\n  @Input(\"value-property-name\") valuePropertyName: string;\n  @Input(\"display-property-name\") displayPropertyName: string;\n  @Input(\"blank-option-text\") blankOptionText: string;\n\n  @Input() ngModel: String;\n  @Output() ngModelChange = new EventEmitter();\n  @Output() valueChanged = new EventEmitter();\n\n  componentRef: ComponentRef<Ng2AutoCompleteComponent>;\n  el: HTMLElement;   // input element\n  acDropdownEl: HTMLElement; // auto complete element\n  inputEl: HTMLInputElement;  // input tag\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    public  viewContainerRef: ViewContainerRef\n  ) {\n    this.el = this.viewContainerRef.element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // wrap this element with <div class=\"ng2-auto-complete\">\n    let divEl = document.createElement(\"div\");\n    divEl.className = \"ng2-auto-complete\";\n    divEl.style.display = \"inline-block\";\n    divEl.style.position = \"relative\";\n    this.el.parentElement.insertBefore(divEl, this.el.nextSibling);\n    divEl.appendChild(this.el);\n\n    // apply toString() method for the object\n    this.selectNewValue(this.ngModel);\n\n    // when somewhere else clicked, hide this autocomplete\n    document.addEventListener(\"click\", this.hideAutoCompleteDropdown);\n  }\n\n  ngOnDestroy(): void {\n    if (this.componentRef) {\n      this.componentRef.instance.valueSelected.unsubscribe();\n    }\n    document.removeEventListener(\"click\", this.hideAutoCompleteDropdown);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['ngModel']) {\n      this.ngModel = this.addToStringFunction(changes['ngModel'].currentValue);\n    }\n  }\n\n  //show auto-complete list below the current element\n  showAutoCompleteDropdown() {\n    this.hideAutoCompleteDropdown();\n\n    let factory = this.resolver.resolveComponentFactory(Ng2AutoCompleteComponent);\n\n    this.componentRef = this.viewContainerRef.createComponent(factory); \n\n    let component = this.componentRef.instance;\n    component.listFormatter = this.listFormatter;\n    //component.prefillFunc = this.prefillFunc;\n    component.pathToData = this.pathToData;\n    component.minChars = this.minChars;\n    component.valuePropertyName = this.valuePropertyName || \"id\";\n    component.displayPropertyName = this.displayPropertyName || \"value\";\n    component.source = this.source;\n    component.placeholder = this.autoCompletePlaceholder;\n    component.blankOptionText = this.blankOptionText;\n    component.valueSelected.subscribe(this.selectNewValue);\n\n    this.acDropdownEl = this.componentRef.location.nativeElement;\n    this.acDropdownEl.style.display = \"none\";\n\n    // if this element is not an input tag, move dropdown after input tag\n    // so that it displays correctly\n    this.moveAutocompleteDropDownAfterInputEl();\n\n    setTimeout(this.styleAutoCompleteDropdown);\n  }\n\n  hideAutoCompleteDropdown = (event?: any): void =>  {\n    if (this.componentRef) {\n      if (\n        event && event.type === \"click\" &&\n        event.target.tagName !== \"INPUT\" &&\n        !this.elementIn(event.target, this.acDropdownEl)\n      ) {\n        this.componentRef.destroy();\n        this.componentRef = undefined;\n      } else if (!event) {\n        this.componentRef.destroy();\n        this.componentRef = undefined;\n      }\n    }\n  };\n\n  styleAutoCompleteDropdown = () => {\n    if (this.componentRef) {\n      let component = this.componentRef.instance;\n\n      /* setting width/height auto complete */\n      let thisElBCR = this.el.getBoundingClientRect();\n      this.acDropdownEl.style.width = thisElBCR.width + \"px\";\n      this.acDropdownEl.style.position = \"absolute\";\n      this.acDropdownEl.style.zIndex = \"1\";\n      this.acDropdownEl.style.top = \"0\";\n      this.acDropdownEl.style.left = \"0\";\n      this.acDropdownEl.style.display = \"inline-block\";\n\n      let thisInputElBCR = this.inputEl.getBoundingClientRect();\n      component.inputEl.style.width = thisInputElBCR.width + \"px\";\n      component.inputEl.style.height = thisInputElBCR.height + \"px\";\n      component.inputEl.focus();\n\n      component.closeToBottom =\n        !!(thisInputElBCR.bottom + 100 > window.innerHeight);\n    }\n  };\n\n  addToStringFunction(val: any): any {\n    if (val && typeof val === \"object\") {\n      let displayVal = val[this.displayPropertyName || \"value\"];\n      val.toString = function() {return displayVal;}\n    }\n    return val;\n  }\n\n  selectNewValue = (val: any) => {\n    if (val !== '') {\n      val = this.addToStringFunction(val);\n    }\n    (val !== this.ngModel) && this.ngModelChange.emit(val);\n    this.valueChanged.emit(val);\n    this.inputEl && (this.inputEl.value = ''+ val);\n    this.hideAutoCompleteDropdown();\n  };\n\n  private moveAutocompleteDropDownAfterInputEl(): void {\n    this.inputEl = <HTMLInputElement>this.el;\n    if (this.el.tagName !== \"INPUT\" && this.acDropdownEl) {\n      this.inputEl =  this.el.querySelector(\"input\");\n      this.inputEl.parentElement.insertBefore(this.acDropdownEl, this.inputEl.nextSibling);\n    }\n  }\n\n  private elementIn(el: Node, containerEl: Node): boolean {\n    while ( el = el.parentNode ) {\n      if ( el === containerEl ) { return true; };\n    }\n    return false;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/ng2-auto-complete.directive.ts\n **/"],"sourceRoot":""}